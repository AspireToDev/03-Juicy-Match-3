[gd_scene load_steps=13 format=2]

[ext_resource path="res://Pieces/Piece.gd" type="Script" id=1]
[ext_resource path="res://Assets/Air.png" type="Texture" id=2]

[sub_resource type="Shader" id=9]
code = "/* 
Rainbow outline by @Farfalk and @ThePadDev, And Edit for @LURGX in 2022

Apply to canvas items with transparent backgrounds.
Check that there is sufficient transparent background space for the outline!

CC0 License (but citation is welcome <3)
All code is property of @Farfalk and @ThePadDev
Thanks for shader and I'm a newbie with shaders 
*/

shader_type canvas_item;

uniform bool rainbow  = false; //Activate the rainbow or select you color
uniform vec4 line_color : hint_color = vec4(1.0, 1.0, 1.0, 1.0);//color line
uniform float line_scale : hint_range(0, 20) = 1.2;    // thickness of the line
uniform float frequency : hint_range(0.0, 2.0) = 0.5;  // frequency of the rainbow
uniform float light_offset : hint_range(0.00001, 1.0) = 0.5;   // this offsets all color channels;
uniform float alpha : hint_range(0.0, 1.0) = 1.0;

void fragment() {
	vec2 size = TEXTURE_PIXEL_SIZE * line_scale;
	
	float outline = texture(TEXTURE, UV + vec2(-size.x, 0)).a;
	outline += texture(TEXTURE, UV + vec2(0, size.y)).a;
	outline += texture(TEXTURE, UV + vec2(size.x, 0)).a;
	outline += texture(TEXTURE, UV + vec2(0, -size.y)).a;
	outline += texture(TEXTURE, UV + vec2(-size.x, size.y)).a;
	outline += texture(TEXTURE, UV + vec2(size.x, size.y)).a;
	outline += texture(TEXTURE, UV + vec2(-size.x, -size.y)).a;
	outline += texture(TEXTURE, UV + vec2(size.x, -size.y)).a;
	outline = min(outline, 1.0);
	
	vec4 animated_line_color = vec4(light_offset + sin(2.0*3.14*frequency*TIME),
							   light_offset + sin(2.0*3.14*frequency*TIME + radians(120.0)),
							   light_offset + sin(2.0*3.14*frequency*TIME + radians(240.0)),
							   alpha);
	
	vec4 color = texture(TEXTURE, UV);
	if (rainbow == true){//if rainbow is activated
		COLOR = mix(color, animated_line_color, outline - color.a);
	}
	if (rainbow == false){//if rainbow not is activated and you pick a color
		COLOR = mix(color, line_color , outline - color.a);
	}
}"

[sub_resource type="ShaderMaterial" id=10]
shader = SubResource( 9 )
shader_param/rainbow = false
shader_param/line_color = Color( 0.686275, 1, 0, 1 )
shader_param/line_scale = 20.0
shader_param/frequency = 0.5
shader_param/light_offset = 0.5
shader_param/alpha = 1.0

[sub_resource type="Curve" id=1]
min_value = -360.0
max_value = 360.0
_data = [ Vector2( 0.010101, 360 ), 0.0, 0.0, 0, 0, Vector2( 1, 144 ), 0.0, 0.0, 0, 0 ]

[sub_resource type="CurveTexture" id=2]
curve = SubResource( 1 )

[sub_resource type="Gradient" id=3]
offsets = PoolRealArray( 0, 0.444444, 0.859903 )
colors = PoolColorArray( 0.386124, 0.941406, 0.498915, 1, 0.114044, 0.789063, 0.662497, 1, 0.405149, 0.765625, 0.158508, 1 )

[sub_resource type="GradientTexture" id=4]
gradient = SubResource( 3 )

[sub_resource type="Curve" id=5]
_data = [ Vector2( 0, 0 ), 0.0, 0.0, 0, 0, Vector2( 1, 1 ), 0.0, 0.0, 0, 0 ]

[sub_resource type="CurveTexture" id=6]
curve = SubResource( 5 )

[sub_resource type="ParticlesMaterial" id=7]
flag_disable_z = true
direction = Vector3( 0, 0, 0 )
spread = 180.0
gravity = Vector3( 0, 0, 0 )
initial_velocity = 200.0
angular_velocity = -145.32
angular_velocity_curve = SubResource( 2 )
orbit_velocity = 0.0
orbit_velocity_random = 0.0
scale = 0.1
scale_curve = SubResource( 6 )
color_ramp = SubResource( 4 )

[sub_resource type="CanvasItemMaterial" id=8]
blend_mode = 1

[node name="Piece" type="Node2D"]
scale = Vector2( 0.75, 0.75 )
script = ExtResource( 1 )

[node name="Sprite" type="Sprite" parent="."]
material = SubResource( 10 )
texture = ExtResource( 2 )

[node name="Selected" type="Particles2D" parent="."]
emitting = false
process_material = SubResource( 7 )
texture = ExtResource( 2 )

[node name="Highlight" type="Sprite" parent="."]
visible = false
modulate = Color( 0.937255, 0.862745, 0.0705882, 1 )
material = SubResource( 8 )
texture = ExtResource( 2 )

[node name="Tween" type="Tween" parent="."]
